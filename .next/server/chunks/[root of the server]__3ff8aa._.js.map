{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Pruthvi%20Patel/Downloads/Project/project/src/lib/mongodb.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI as string;\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error(\"Please define the MONGODB_URI environment variable\");\r\n}\r\n\r\nexport const connectDB = async () => {\r\n  if (mongoose.connection.readyState >= 1) {\r\n    return;\r\n  }\r\n  await mongoose.connect(MONGODB_URI);\r\n};\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEO,MAAM,YAAY;IACvB,IAAI,yGAAA,CAAA,UAAQ,CAAC,UAAU,CAAC,UAAU,IAAI,GAAG;QACvC;IACF;IACA,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;AACzB"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Pruthvi%20Patel/Downloads/Project/project/src/models/Student.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\n\r\nconst StudentSchema = new mongoose.Schema({\r\n  name: { type: String, required: true },\r\n  email: { type: String, required: true, unique: true },\r\n  age: { type: Number, required: true },\r\n});\r\n\r\n\r\nexport default mongoose.models.Student || mongoose.model(\"Student\", StudentSchema);\r\n"],"names":[],"mappings":";;;AAAA;;AAGA,MAAM,gBAAgB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACxC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,KAAK;QAAE,MAAM;QAAQ,UAAU;IAAK;AACtC;uCAGe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,WAAW"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Pruthvi%20Patel/Downloads/Project/project/src/app/api/students/%5Bid%5D/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { connectDB } from \"@/lib/mongodb\";\r\nimport Student from \"@/models/Student\";\r\n\r\n// UPDATE a student by ID\r\nexport async function PUT(req: Request, { params }: { params: { id: string } }) {\r\n  try {\r\n    \r\n    const { id } = await params; \r\n    await connectDB();\r\n    const { name, email, age } = await req.json();\r\n\r\n    const updatedStudent = await Student.findByIdAndUpdate(id, { name, email, age }, { new: true });\r\n\r\n    if (!updatedStudent) {\r\n      console.error(\"Student not found for update.\");\r\n      return NextResponse.json({ message: \"Student not found\" }, { status: 404 });\r\n    }\r\n\r\n    return NextResponse.json(updatedStudent, { status: 200 });\r\n  } catch (error) {\r\n    console.error(\"Error during PUT request: \", error);\r\n    return NextResponse.json({ message: \"Internal Server Error\" }, { status: 500 });\r\n  }\r\n}\r\n\r\n// DELETE a student by ID\r\nexport async function DELETE(req: Request, { params }: { params: { id: string } }) {\r\n  try {\r\n    \r\n    const { id } = await params; \r\n    await connectDB();\r\n\r\n    const deletedStudent = await Student.findByIdAndDelete(id);\r\n    if (!deletedStudent) {\r\n      console.error(\"Student not found for delete.\");\r\n      return NextResponse.json({ message: \"Student not found\" }, { status: 404 });\r\n    }\r\n\r\n    return NextResponse.json({ message: \"Student deleted successfully\" }, { status: 200 });\r\n  } catch (error) {\r\n    console.error(\"Error during DELETE request: \", error);\r\n    return NextResponse.json({ message: \"Internal Server Error\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAGO,eAAe,IAAI,GAAY,EAAE,EAAE,MAAM,EAA8B;IAC5E,IAAI;QAEF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;QACrB,MAAM,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;QACd,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,IAAI,IAAI;QAE3C,MAAM,iBAAiB,MAAM,0HAAA,CAAA,UAAO,CAAC,iBAAiB,CAAC,IAAI;YAAE;YAAM;YAAO;QAAI,GAAG;YAAE,KAAK;QAAK;QAE7F,IAAI,CAAC,gBAAgB;YACnB,QAAQ,KAAK,CAAC;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QAC3E;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,gBAAgB;YAAE,QAAQ;QAAI;IACzD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC/E;AACF;AAGO,eAAe,OAAO,GAAY,EAAE,EAAE,MAAM,EAA8B;IAC/E,IAAI;QAEF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;QACrB,MAAM,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;QAEd,MAAM,iBAAiB,MAAM,0HAAA,CAAA,UAAO,CAAC,iBAAiB,CAAC;QACvD,IAAI,CAAC,gBAAgB;YACnB,QAAQ,KAAK,CAAC;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QAC3E;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA+B,GAAG;YAAE,QAAQ;QAAI;IACtF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC/E;AACF"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}